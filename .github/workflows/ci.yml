# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#       - development
#       - staging
#       - canary
#   pull_request:

# jobs:
#   # Build and Test Job
#   build-and-test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         service: [backend, frontend, ml-service]
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       # Install Dependencies for Each Service
#       - name: Install Dependencies
#         run: npm ci --prefix apps/${{ matrix.service }}

#       # Build and Test the Service
#       - name: Build and Test Service
#         run: npx nx run ${{ matrix.service }}:build --parallel

#       # Run Tests
#       - name: Run Tests
#         run: npx nx run ${{ matrix.service }}:test

#       # Static Analysis and Security Scan
#       - name: Static Analysis and Security Scan
#         run: |
#           if [ "${{ matrix.service }}" == "ml-service" ]; then
#             pip install pip-audit && pip-audit
#           else
#             npm audit
#           fi

#       # Upload Build Artifacts
#       - name: Upload Build Artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ matrix.service }}-build
#           path: dist/apps/${{ matrix.service }}

#   # Build and Push Docker Images
#   build-and-push-docker:
#     needs: build-and-test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       # Log in to Docker Hub
#       - name: Log in to Docker Hub
#         if: ${{ secrets.DOCKER_TOKEN && secrets.DOCKER_USERNAME }}
#         run: |
#           echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

#       # Build and Push Docker Images for All Services
#       - name: Build and Push Docker Images
#         run: |
#           for service in backend frontend ml-service; do
#             npx nx run $service:docker-build-and-push || exit 1
#           done

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
      - staging
      - canary
  pull_request:

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, ml-service]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install Dependencies for Each Service
      - name: Install Dependencies
        run: npm ci --prefix apps/${{ matrix.service }}

      # Build and Test the Service
      - name: Build and Test Service
        run: npx nx run ${{ matrix.service }}:build --parallel

      # Run Tests
      - name: Run Tests
        run: npx nx run ${{ matrix.service }}:test

      # Static Analysis and Security Scan
      - name: Static Analysis and Security Scan
        run: |
          if [ "${{ matrix.service }}" == "ml-service" ]; then
            pip install pip-audit && pip-audit
          else
            npm audit
          fi

      # Upload Build Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}-build
          path: dist/apps/${{ matrix.service }}

  # Build and Push Docker Images
  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Check for Secrets
      - name: Ensure Secrets Are Set
        run: |
          if [ -z "${{ secrets.DOCKER_TOKEN }}" ] || [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "Docker credentials are missing. Exiting."
            exit 1
          fi

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      # Build and Push Docker Images for All Services
      - name: Build and Push Docker Images
        run: |
          for service in backend frontend ml-service; do
            npx nx run $service:docker-build-and-push || exit 1
          done
