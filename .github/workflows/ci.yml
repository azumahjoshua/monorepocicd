name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
      - staging
      - canary
  pull_request:

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, ml-service]
    steps:
      # Checkout the code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install dependencies from root package.json
      - name: Install Dependencies
        run: npm ci

      # Build and Test the Service
      - name: Build and Test Service
        run: npx nx run ${{ matrix.service }}:build --parallel

      # Run Tests
      - name: Run Tests
        run: npx nx run ${{ matrix.service }}:test

      # Static Analysis and Security Scanning
      - name: Static Analysis and Security Scan
        run: |
          npx nx run ${{ matrix.service }}:lint
          if [ "${{ matrix.service }}" == "ml-service" ]; then
            pip install pip-audit && pip-audit
          else
            npm audit
          fi

      # Upload Build Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.service }}-build
          path: dist/apps/${{ matrix.service }}

  # Build and Push Docker Images
  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Build and Push Docker Images
      - name: Build and Push Docker Images
        run: npx nx run docker-build-and-push
